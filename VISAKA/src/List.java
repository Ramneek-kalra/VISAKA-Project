/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.*;
import java.net.URL;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.*;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import static javax.swing.JFileChooser.*;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author RKDS
 */
public class List extends javax.swing.JFrame {

    /**
     * Creates new form List
     */
    public List() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        filter = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        studentno = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        search = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("View Page");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Viewer"));

        table.setAutoCreateRowSorter(true);
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial No", "Name", "Father's Name", "Gender", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(table);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("Filter By:");

        filter.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        filter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Serial No", "Name", "Father's Name", "Gender", "Address" }));
        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setText("No. of Citizens Listed:");

        studentno.setEditable(false);
        studentno.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setText("Modify");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        search.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jButton6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton6.setText("Back To Home");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filter, 0, 1, Short.MAX_VALUE))
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(studentno))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3))
                            .addComponent(jButton6))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(studentno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6)))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo.png"))); // NOI18N

        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton5.setText("Logout");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        table.getTableHeader().setReorderingAllowed(false);
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        String query="select*from people";
        try{
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection c=(Connection)
            DriverManager.getConnection("jdbc:mysql://localhost:3306/admin","root","HMRITM");
            java.sql.Statement stmt=c.createStatement();
            ResultSet rs=stmt.executeQuery(query);
            while(rs.next()){
                String nNo=rs.getString("Serial_No");
                String nEmpName=rs.getString("Name");
                String nEmpAddress=rs.getString("Father_Name");
                String nSem=rs.getString("Gender");
                String nYear=rs.getString("Address");
                model.addRow(new Object[]{nNo,nEmpName,nEmpAddress,nSem,nYear});
                for(int i=0;i<table.getColumnCount();i++){
                    DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                    TableColumn col = colModel.getColumn(i);
                    int width = 0;
                    TableCellRenderer renderer = col.getHeaderRenderer();
                    if (renderer == null) {
                        renderer = table.getTableHeader().getDefaultRenderer();
                    }
                    Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                        false, 0, 0);
                    width = comp.getPreferredSize().width;
                    col.setPreferredWidth(width+2);
                }
                int re=model.getRowCount();
                String noo=String.valueOf(re);
                studentno.setText(noo);
            }

        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        table.getTableHeader().setReorderingAllowed(false);
        String se=search.getText();
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        if(filter.getSelectedIndex()==1){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String query="select*from people where Serial_No="+se;
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost:3306/admin","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Serial_No");
                String nEmpName=rs.getString("Name");
                String nEmpAddress=rs.getString("Father_Name");
                String nSem=rs.getString("Gender");
                String nYear=rs.getString("Address");
                    model.addRow(new Object[]{nNo,nEmpName,nEmpAddress,nSem,nYear});
                    for(int i=0;i<table.getColumnCount();i++){
                        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                        TableColumn col = colModel.getColumn(i);
                        int width = 0;

                        TableCellRenderer renderer = col.getHeaderRenderer();
                        if (renderer == null) {
                            renderer = table.getTableHeader().getDefaultRenderer();
                        }
                        Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                            false, 0, 0);
                        width = comp.getPreferredSize().width;
                        col.setPreferredWidth(width+2);
                    }
                    int re=model.getRowCount();
                    String noo=String.valueOf(re);
                    studentno.setText(noo);
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
        else if(filter.getSelectedIndex()==2){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String query="select*from people where Name='"+se+"';";
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost:3306/admin","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Serial_No");
                    String nEmpName=rs.getString("Name");
                    String nEmpAddress=rs.getString("Father_Name");
                    String nSem=rs.getString("Gender");
                    String nYear=rs.getString("Address");
                    model.addRow(new Object[]{nNo,nEmpName,nEmpAddress,nSem,nYear});
                    for(int i=0;i<table.getColumnCount();i++){
                        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                        TableColumn col = colModel.getColumn(i);
                        int width = 0;

                        TableCellRenderer renderer = col.getHeaderRenderer();
                        if (renderer == null) {
                            renderer = table.getTableHeader().getDefaultRenderer();
                        }
                        Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                            false, 0, 0);
                        width = comp.getPreferredSize().width;
                        col.setPreferredWidth(width+2);
                        int re=model.getRowCount();
                        String noo=String.valueOf(re);
                        studentno.setText(noo);
                    }

                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
        else if(filter.getSelectedIndex()==3){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String query="select*from people where Father_Name='"+se+"';";
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost:3306/admin","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Serial_No");
                    String nEmpName=rs.getString("Name");
                    String nEmpAddress=rs.getString("Father_Name");
                    String nSem=rs.getString("Gender");
                    String nYear=rs.getString("Address");
                    model.addRow(new Object[]{nNo,nEmpName,nEmpAddress,nSem,nYear});
                    for(int i=0;i<table.getColumnCount();i++){
                        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                        TableColumn col = colModel.getColumn(i);
                        int width = 0;

                        TableCellRenderer renderer = col.getHeaderRenderer();
                        if (renderer == null) {
                            renderer = table.getTableHeader().getDefaultRenderer();
                        }
                        Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                            false, 0, 0);
                        width = comp.getPreferredSize().width;
                        col.setPreferredWidth(width+2);
                    }
                    int re=model.getRowCount();
                    String noo=String.valueOf(re);
                    studentno.setText(noo);
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
        else if(filter.getSelectedIndex()==4){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String query="select*from people where Gender='"+se+"';";
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost:3306/admin","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Serial_No");
                    String nEmpName=rs.getString("Name");
                    String nEmpAddress=rs.getString("Father_Name");
                    String nSem=rs.getString("Gender");
                    String nYear=rs.getString("Address");
                    model.addRow(new Object[]{nNo,nEmpName,nEmpAddress,nSem,nYear});
                    for(int i=0;i<table.getColumnCount();i++){
                        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                        TableColumn col = colModel.getColumn(i);
                        int width = 0;

                        TableCellRenderer renderer = col.getHeaderRenderer();
                        if (renderer == null) {
                            renderer = table.getTableHeader().getDefaultRenderer();
                        }
                        Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                            false, 0, 0);
                        width = comp.getPreferredSize().width;
                        col.setPreferredWidth(width+2);
                    }
                    int re=model.getRowCount();
                    String noo=String.valueOf(re);
                    studentno.setText(noo);
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
        else if(filter.getSelectedIndex()==5){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String query="select*from people where Address='"+se+"';";
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost:3306/admin","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Serial_No");
                    String nEmpName=rs.getString("Name");
                    String nEmpAddress=rs.getString("Father_Name");
                    String nSem=rs.getString("Gender");
                    String nYear=rs.getString("Address");
                    model.addRow(new Object[]{nNo,nEmpName,nEmpAddress,nSem,nYear});
                    for(int i=0;i<table.getColumnCount();i++){
                        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                        TableColumn col = colModel.getColumn(i);
                        int width = 0;

                        TableCellRenderer renderer = col.getHeaderRenderer();
                        if (renderer == null) {
                            renderer = table.getTableHeader().getDefaultRenderer();
                        }
                        Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                            false, 0, 0);
                        width = comp.getPreferredSize().width;
                        col.setPreferredWidth(width+2);
                    }
                    int re=model.getRowCount();
                    String noo=String.valueOf(re);
                    studentno.setText(noo);
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int r=JOptionPane.showConfirmDialog(this, "Are you sure you want to Logout?");
        if(r==1){
            this.setVisible(false);
            this.setVisible(true);
        }
        else if(r==0){
            this.setVisible(false);
            Login_Page m=new Login_Page();
            m.setVisible(true);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Main f=new Main();
        f.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new List().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> filter;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField search;
    private javax.swing.JTextField studentno;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
